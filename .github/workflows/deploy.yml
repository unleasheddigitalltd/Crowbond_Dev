name: Deploy API to ECR

on:
  push:
    branches:
      - main
    paths:
      - "src/API/**"
      - ".github/workflows/deploy.yml"
  workflow_run:
    workflows: ["Terraform"]
    types:
      - completed
    branches:
      - main

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: crowbond-api
  IMAGE_TAG: ${{ github.sha }}
  APP_RUNNER_SERVICE: crowbond-api-production

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.workflow_run == null }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./src/API/Crowbond.Api
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Update App Runner service
        run: |
          aws apprunner update-service --service-name $APP_RUNNER_SERVICE \
            --source-configuration '{"ImageRepository": {"ImageIdentifier": "'$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG'", "ImageRepositoryType": "ECR"}}'
