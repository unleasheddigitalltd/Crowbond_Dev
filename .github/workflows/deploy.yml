name: Deploy API to ECR

on:
  push:
    branches:
      - main
    paths:
      - "src/API/**"
      - ".github/workflows/deploy.yml"
  workflow_run:
    workflows: ["Terraform"]
    types:
      - completed
    branches:
      - main

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: crowbond-api-production
  IMAGE_TAG: ${{ github.sha }}
  ECS_CLUSTER: crowbond-api-production-cluster
  ECS_SERVICE: crowbond-api-production

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.workflow_run == null }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY || steps.login-ecr.outputs.registry }}
          DOCKER_BUILDKIT: 1
        run: |
          # Mask the registry URL in logs
          echo "::add-mask::$ECR_REGISTRY"

          # Build from repository root to ensure all project files are accessible
          docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
                      -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
                      -f Dockerfile .
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} \
                                --service ${{ env.ECS_SERVICE }} \
                                --force-new-deployment
