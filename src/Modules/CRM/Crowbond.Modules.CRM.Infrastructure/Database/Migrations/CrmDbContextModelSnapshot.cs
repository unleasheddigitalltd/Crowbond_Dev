// <auto-generated />
using System;
using Crowbond.Modules.CRM.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Crowbond.Modules.CRM.Infrastructure.Database.Migrations
{
    [DbContext(typeof(CrmDbContext))]
    partial class CrmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("crm")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Inbox.InboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("jsonb")
                        .HasColumnName("content");

                    b.Property<string>("Error")
                        .HasColumnType("text")
                        .HasColumnName("error");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("occurred_on_utc");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_inbox_messages");

                    b.ToTable("inbox_messages", "crm");
                });

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Inbox.InboxMessageConsumer", b =>
                {
                    b.Property<Guid>("InboxMessageId")
                        .HasColumnType("uuid")
                        .HasColumnName("inbox_message_id");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("name");

                    b.HasKey("InboxMessageId", "Name")
                        .HasName("pk_inbox_message_consumers");

                    b.ToTable("inbox_message_consumers", "crm");
                });

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("jsonb")
                        .HasColumnName("content");

                    b.Property<string>("Error")
                        .HasColumnType("text")
                        .HasColumnName("error");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("occurred_on_utc");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_outbox_messages");

                    b.ToTable("outbox_messages", "crm");
                });

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Outbox.OutboxMessageConsumer", b =>
                {
                    b.Property<Guid>("OutboxMessageId")
                        .HasColumnType("uuid")
                        .HasColumnName("outbox_message_id");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("name");

                    b.HasKey("OutboxMessageId", "Name")
                        .HasName("pk_outbox_message_consumers");

                    b.ToTable("outbox_message_consumers", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.CustomerContacts.CustomerContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("boolean")
                        .HasColumnName("is_primary");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("mobile");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone_number");

                    b.Property<bool>("ReceiveInvoice")
                        .HasColumnType("boolean")
                        .HasColumnName("receive_invoice");

                    b.Property<bool>("ReceiveOrder")
                        .HasColumnType("boolean")
                        .HasColumnName("receive_order");

                    b.Property<bool>("ReceivePriceList")
                        .HasColumnType("boolean")
                        .HasColumnName("receive_price_list");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_customer_contacts");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_customer_contacts_customer_id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_customer_contacts_email");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("ix_customer_contacts_username");

                    b.ToTable("customer_contacts", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.CustomerOutletRoutes.CustomerOutletRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CustomerOutletId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_outlet_id");

                    b.Property<string>("DaysOfWeek")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("days_of_week");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uuid")
                        .HasColumnName("route_id");

                    b.HasKey("Id")
                        .HasName("pk_customer_outlet_routes");

                    b.ToTable("customer_outlet_routes", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.CustomerOutlets.CustomerOutlet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address_line1");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address_line2");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("country");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("county");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<DateTime>("CreateOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_on_utc");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("DeliveryNote")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("delivery_note");

                    b.Property<TimeOnly>("DeliveryTimeFrom")
                        .HasColumnType("time without time zone")
                        .HasColumnName("delivery_time_from");

                    b.Property<TimeOnly>("DeliveryTimeTo")
                        .HasColumnType("time without time zone")
                        .HasColumnName("delivery_time_to");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("full_name");

                    b.Property<bool>("Is24HrsDelivery")
                        .HasColumnType("boolean")
                        .HasColumnName("is24hrs_delivery");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on_utc");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("location_name");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("mobile");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone_number");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("postal_code");

                    b.Property<string>("TownCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("town_city");

                    b.HasKey("Id")
                        .HasName("pk_customer_outlets");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_customer_outlets_customer_id");

                    b.ToTable("customer_outlets", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.CustomerProductPrices.CustomerProductPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<Guid>("CustomerProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_product_id");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date")
                        .HasColumnName("effective_date");

                    b.Property<DateOnly?>("ExpiryDate")
                        .HasColumnType("date")
                        .HasColumnName("expiry_date");

                    b.Property<decimal?>("FixedDiscount")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("fixed_discount");

                    b.Property<decimal?>("FixedPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("fixed_price");

                    b.HasKey("Id")
                        .HasName("pk_customer_product_prices");

                    b.HasIndex("CustomerProductId")
                        .HasDatabaseName("ix_customer_product_prices_customer_product_id");

                    b.ToTable("customer_product_prices", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.CustomerProducts.CustomerProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.HasKey("Id")
                        .HasName("pk_customer_products");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_customer_products_product_id");

                    b.HasIndex("CustomerId", "ProductId")
                        .IsUnique()
                        .HasDatabaseName("ix_customer_products_customer_id_product_id");

                    b.ToTable("customer_products", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.CustomerSettings.CustomerSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<string>("CustomerLogo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("customer_logo");

                    b.Property<int>("ShowLogoInDeliveryDocket")
                        .HasColumnType("integer")
                        .HasColumnName("show_logo_in_delivery_docket");

                    b.Property<bool>("ShowPriceInApp")
                        .HasColumnType("boolean")
                        .HasColumnName("show_price_in_app");

                    b.Property<bool>("ShowPricesInDeliveryDocket")
                        .HasColumnType("boolean")
                        .HasColumnName("show_prices_in_delivery_docket");

                    b.HasKey("Id")
                        .HasName("pk_customer_settings");

                    b.HasIndex("CustomerId")
                        .IsUnique()
                        .HasDatabaseName("ix_customer_settings_customer_id");

                    b.ToTable("customer_settings", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.Customers.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("account_number");

                    b.Property<string>("BillingAddressLine1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("billing_address_line1");

                    b.Property<string>("BillingAddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("billing_address_line2");

                    b.Property<string>("BillingCountry")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("billing_country");

                    b.Property<string>("BillingCounty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("billing_county");

                    b.Property<string>("BillingPostalCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("billing_postal_code");

                    b.Property<string>("BillingTownCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("billing_town_city");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("business_name");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date");

                    b.Property<bool>("CustomPaymentTerm")
                        .HasColumnType("boolean")
                        .HasColumnName("custom_payment_term");

                    b.Property<string>("CustomerNotes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("customer_notes");

                    b.Property<decimal?>("DeliveryCharge")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("delivery_charge");

                    b.Property<int>("DeliveryFeeSetting")
                        .HasColumnType("integer")
                        .HasColumnName("delivery_fee_setting");

                    b.Property<decimal?>("DeliveryMinOrderValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("delivery_min_order_value");

                    b.Property<bool>("DetailedInvoice")
                        .HasColumnType("boolean")
                        .HasColumnName("detailed_invoice");

                    b.Property<decimal>("Discount")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("discount");

                    b.Property<int?>("InvoiceDueDays")
                        .HasColumnType("integer")
                        .HasColumnName("invoice_due_days");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsHq")
                        .HasColumnType("boolean")
                        .HasColumnName("is_hq");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<bool>("NoDiscountFixedPrice")
                        .HasColumnType("boolean")
                        .HasColumnName("no_discount_fixed_price");

                    b.Property<bool>("NoDiscountSpecialItem")
                        .HasColumnType("boolean")
                        .HasColumnName("no_discount_special_item");

                    b.Property<int?>("PaymentTerms")
                        .HasColumnType("integer")
                        .HasColumnName("payment_terms");

                    b.Property<Guid>("PriceTierId")
                        .HasColumnType("uuid")
                        .HasColumnName("price_tier_id");

                    b.Property<Guid?>("RepId")
                        .HasColumnType("uuid")
                        .HasColumnName("rep_id");

                    b.HasKey("Id")
                        .HasName("pk_customers");

                    b.HasIndex("RepId")
                        .HasDatabaseName("ix_customers_rep_id");

                    b.ToTable("customers", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.PriceTiers.PriceTier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_price_tiers");

                    b.ToTable("price_tiers", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.ProductPrices.ProductPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("BasePurchasePrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("base_purchase_price");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date")
                        .HasColumnName("effective_date");

                    b.Property<Guid>("PriceTierId")
                        .HasColumnType("uuid")
                        .HasColumnName("price_tier_id");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<decimal>("SalePrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("sale_price");

                    b.HasKey("Id")
                        .HasName("pk_product_prices");

                    b.HasIndex("PriceTierId")
                        .HasDatabaseName("ix_product_prices_price_tier_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_product_prices_product_id");

                    b.ToTable("product_prices", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("category_name");

                    b.Property<string>("FilterTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("filter_type_name");

                    b.Property<string>("InventoryTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("inventory_type_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("sku");

                    b.Property<int>("TaxRateType")
                        .HasColumnType("integer")
                        .HasColumnName("tax_rate_type");

                    b.Property<string>("UnitOfMeasureName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("unit_of_measure_name");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.ToTable("products", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.Recipients.Recipient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CustomerContactId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_contact_id");

                    b.Property<int>("RecipientType")
                        .HasColumnType("integer")
                        .HasColumnName("recipient_type");

                    b.HasKey("Id")
                        .HasName("pk_recipients");

                    b.HasIndex("CustomerContactId")
                        .HasDatabaseName("ix_recipients_customer_contact_id");

                    b.ToTable("recipients", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.Reps.Rep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_reps");

                    b.ToTable("reps", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.Routes.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<TimeOnly>("CutOffTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("cut_off_time");

                    b.Property<string>("DaysOfWeek")
                        .IsRequired()
                        .HasColumnType("CHAR(7)")
                        .HasColumnName("days_of_week");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("Position")
                        .HasColumnType("integer")
                        .HasColumnName("position");

                    b.HasKey("Id")
                        .HasName("pk_routes");

                    b.ToTable("routes", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.Sequences.Sequence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Context")
                        .HasColumnType("integer")
                        .HasColumnName("context");

                    b.Property<int>("LastNumber")
                        .HasColumnType("integer")
                        .HasColumnName("last_number");

                    b.HasKey("Id")
                        .HasName("pk_sequences");

                    b.ToTable("sequences", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.SupplierContacts.SupplierContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("boolean")
                        .HasColumnName("is_primary");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("mobile");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone_number");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uuid")
                        .HasColumnName("supplier_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_supplier_contacts");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_supplier_contacts_email");

                    b.HasIndex("SupplierId")
                        .HasDatabaseName("ix_supplier_contacts_supplier_id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("ix_supplier_contacts_username");

                    b.ToTable("supplier_contacts", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.SupplierProducts.SupplierProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comments")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("comments");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean")
                        .HasColumnName("is_default");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on_utc");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uuid")
                        .HasColumnName("supplier_id");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("pk_supplier_products");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_supplier_products_product_id");

                    b.HasIndex("SupplierId")
                        .HasDatabaseName("ix_supplier_products_supplier_id");

                    b.ToTable("supplier_products", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.Suppliers.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("account_number");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address_line1");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address_line2");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("country");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("county");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<int>("PaymentTerms")
                        .HasColumnType("integer")
                        .HasColumnName("payment_terms");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("postal_code");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("supplier_name");

                    b.Property<string>("SupplierNotes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("supplier_notes");

                    b.Property<string>("TownCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("town_city");

                    b.HasKey("Id")
                        .HasName("pk_suppliers");

                    b.ToTable("suppliers", "crm");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.CustomerContacts.CustomerContact", b =>
                {
                    b.HasOne("Crowbond.Modules.CRM.Domain.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_customer_contacts_customers_customer_id");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.CustomerOutlets.CustomerOutlet", b =>
                {
                    b.HasOne("Crowbond.Modules.CRM.Domain.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_customer_outlets_customers_customer_id");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.CustomerProductPrices.CustomerProductPrice", b =>
                {
                    b.HasOne("Crowbond.Modules.CRM.Domain.CustomerProducts.CustomerProduct", null)
                        .WithMany()
                        .HasForeignKey("CustomerProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_customer_product_prices_customer_products_customer_product_");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.CustomerProducts.CustomerProduct", b =>
                {
                    b.HasOne("Crowbond.Modules.CRM.Domain.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_customer_products_customers_customer_id");

                    b.HasOne("Crowbond.Modules.CRM.Domain.Products.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_customer_products_products_product_id");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.CustomerSettings.CustomerSetting", b =>
                {
                    b.HasOne("Crowbond.Modules.CRM.Domain.Customers.Customer", null)
                        .WithOne("CustomerSetting")
                        .HasForeignKey("Crowbond.Modules.CRM.Domain.CustomerSettings.CustomerSetting", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_customer_settings_customers_customer_id");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.Customers.Customer", b =>
                {
                    b.HasOne("Crowbond.Modules.CRM.Domain.Reps.Rep", null)
                        .WithMany()
                        .HasForeignKey("RepId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fk_customers_reps_rep_id");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.ProductPrices.ProductPrice", b =>
                {
                    b.HasOne("Crowbond.Modules.CRM.Domain.PriceTiers.PriceTier", null)
                        .WithMany()
                        .HasForeignKey("PriceTierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_product_prices_price_tiers_price_tier_id");

                    b.HasOne("Crowbond.Modules.CRM.Domain.Products.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_product_prices_products_product_id");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.Recipients.Recipient", b =>
                {
                    b.HasOne("Crowbond.Modules.CRM.Domain.CustomerContacts.CustomerContact", null)
                        .WithMany()
                        .HasForeignKey("CustomerContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_recipients_customer_contacts_customer_contact_id");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.SupplierContacts.SupplierContact", b =>
                {
                    b.HasOne("Crowbond.Modules.CRM.Domain.Suppliers.Supplier", null)
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_supplier_contacts_suppliers_supplier_id");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.SupplierProducts.SupplierProduct", b =>
                {
                    b.HasOne("Crowbond.Modules.CRM.Domain.Products.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_supplier_products_products_product_id");

                    b.HasOne("Crowbond.Modules.CRM.Domain.Suppliers.Supplier", null)
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_supplier_products_suppliers_supplier_id");
                });

            modelBuilder.Entity("Crowbond.Modules.CRM.Domain.Customers.Customer", b =>
                {
                    b.Navigation("CustomerSetting")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
