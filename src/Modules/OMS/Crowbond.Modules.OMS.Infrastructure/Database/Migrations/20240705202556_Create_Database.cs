// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Crowbond.Modules.OMS.Infrastructure.Database.Migrations;

/// <inheritdoc />
public partial class Create_Database : Migration
{
    /// <inheritdoc />
    protected override void Up(MigrationBuilder migrationBuilder)
    {
        migrationBuilder.EnsureSchema(
            name: "oms");

        migrationBuilder.CreateTable(
            name: "inbox_message_consumers",
            schema: "oms",
            columns: table => new
            {
                inbox_message_id = table.Column<Guid>(type: "uuid", nullable: false),
                name = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: false)
            },
            constraints: table =>
            {
                table.PrimaryKey("pk_inbox_message_consumers", x => new { x.inbox_message_id, x.name });
            });

        migrationBuilder.CreateTable(
            name: "inbox_messages",
            schema: "oms",
            columns: table => new
            {
                id = table.Column<Guid>(type: "uuid", nullable: false),
                type = table.Column<string>(type: "text", nullable: false),
                content = table.Column<string>(type: "jsonb", maxLength: 2000, nullable: false),
                occurred_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                processed_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                error = table.Column<string>(type: "text", nullable: true)
            },
            constraints: table =>
            {
                table.PrimaryKey("pk_inbox_messages", x => x.id);
            });

        migrationBuilder.CreateTable(
            name: "order_headers",
            schema: "oms",
            columns: table => new
            {
                id = table.Column<Guid>(type: "uuid", nullable: false),
                invoice_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                invoiced_by = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true),
                invoiced_date = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                customer_id = table.Column<Guid>(type: "uuid", nullable: false),
                customer_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                customer_mobile = table.Column<string>(type: "character varying(20)", maxLength: 20, nullable: false),
                customer_email = table.Column<string>(type: "character varying(255)", maxLength: 255, nullable: false),
                order_amount = table.Column<decimal>(type: "numeric(10,2)", precision: 10, scale: 2, nullable: false),
                route_id = table.Column<Guid>(type: "uuid", nullable: false),
                shipping_address_company = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                shipping_address_line1 = table.Column<string>(type: "character varying(255)", maxLength: 255, nullable: false),
                shipping_address_line2 = table.Column<string>(type: "character varying(255)", maxLength: 255, nullable: false),
                shipping_address_town_city = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                shipping_address_county = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                shipping_address_country = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                shipping_address_postal_code = table.Column<string>(type: "character varying(20)", maxLength: 20, nullable: false),
                shipping_date = table.Column<DateOnly>(type: "date", nullable: false),
                sales_order_number = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                purchase_order_number = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                order_tax = table.Column<decimal>(type: "numeric(10,2)", precision: 10, scale: 2, nullable: false),
                delivery_method = table.Column<int>(type: "integer", nullable: true),
                delivery_charge = table.Column<decimal>(type: "numeric(10,2)", precision: 10, scale: 2, nullable: false),
                payment_method = table.Column<int>(type: "integer", nullable: false),
                payment_status = table.Column<int>(type: "integer", nullable: false),
                customer_comment = table.Column<string>(type: "character varying(3000)", maxLength: 3000, nullable: true),
                original_source = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                external_order_ref = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                tags = table.Column<string>(type: "character varying(255)", maxLength: 255, nullable: false)
            },
            constraints: table =>
            {
                table.PrimaryKey("pk_order_headers", x => x.id);
            });

        migrationBuilder.CreateTable(
            name: "outbox_message_consumers",
            schema: "oms",
            columns: table => new
            {
                outbox_message_id = table.Column<Guid>(type: "uuid", nullable: false),
                name = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: false)
            },
            constraints: table =>
            {
                table.PrimaryKey("pk_outbox_message_consumers", x => new { x.outbox_message_id, x.name });
            });

        migrationBuilder.CreateTable(
            name: "outbox_messages",
            schema: "oms",
            columns: table => new
            {
                id = table.Column<Guid>(type: "uuid", nullable: false),
                type = table.Column<string>(type: "text", nullable: false),
                content = table.Column<string>(type: "jsonb", maxLength: 2000, nullable: false),
                occurred_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                processed_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                error = table.Column<string>(type: "text", nullable: true)
            },
            constraints: table =>
            {
                table.PrimaryKey("pk_outbox_messages", x => x.id);
            });

        migrationBuilder.CreateTable(
            name: "order_lines",
            schema: "oms",
            columns: table => new
            {
                id = table.Column<Guid>(type: "uuid", nullable: false),
                order_id = table.Column<Guid>(type: "uuid", nullable: false),
                product_id = table.Column<Guid>(type: "uuid", nullable: false),
                product_sku = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                product_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                unit_price = table.Column<decimal>(type: "numeric(10,2)", precision: 10, scale: 2, nullable: false),
                qty = table.Column<int>(type: "numeric(10,2)", precision: 10, scale: 2, nullable: false),
                sub_total = table.Column<decimal>(type: "numeric(10,2)", precision: 10, scale: 2, nullable: false),
                tax = table.Column<decimal>(type: "numeric(5,2)", precision: 5, scale: 2, nullable: false),
                line_total = table.Column<decimal>(type: "numeric(10,2)", precision: 10, scale: 2, nullable: false),
                foc = table.Column<bool>(type: "boolean", nullable: false),
                taxable = table.Column<bool>(type: "boolean", nullable: false)
            },
            constraints: table =>
            {
                table.PrimaryKey("pk_order_lines", x => x.id);
                table.ForeignKey(
                    name: "fk_order_lines_order_headers_order_id",
                    column: x => x.order_id,
                    principalSchema: "oms",
                    principalTable: "order_headers",
                    principalColumn: "id",
                    onDelete: ReferentialAction.Cascade);
            });

        migrationBuilder.CreateIndex(
            name: "ix_order_lines_order_id",
            schema: "oms",
            table: "order_lines",
            column: "order_id");
    }

    /// <inheritdoc />
    protected override void Down(MigrationBuilder migrationBuilder)
    {
        migrationBuilder.DropTable(
            name: "inbox_message_consumers",
            schema: "oms");

        migrationBuilder.DropTable(
            name: "inbox_messages",
            schema: "oms");

        migrationBuilder.DropTable(
            name: "order_lines",
            schema: "oms");

        migrationBuilder.DropTable(
            name: "outbox_message_consumers",
            schema: "oms");

        migrationBuilder.DropTable(
            name: "outbox_messages",
            schema: "oms");

        migrationBuilder.DropTable(
            name: "order_headers",
            schema: "oms");
    }
}
