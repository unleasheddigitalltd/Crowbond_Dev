// <auto-generated />
using System;
using Crowbond.Modules.OMS.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Crowbond.Modules.OMS.Infrastructure.Database.Migrations
{
    [DbContext(typeof(OmsDbContext))]
    [Migration("20240708113811_Insert_Payment_Methods")]
    partial class Insert_Payment_Methods
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("oms")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Inbox.InboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("jsonb")
                        .HasColumnName("content");

                    b.Property<string>("Error")
                        .HasColumnType("text")
                        .HasColumnName("error");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("occurred_on_utc");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_inbox_messages");

                    b.ToTable("inbox_messages", "oms");
                });

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Inbox.InboxMessageConsumer", b =>
                {
                    b.Property<Guid>("InboxMessageId")
                        .HasColumnType("uuid")
                        .HasColumnName("inbox_message_id");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("name");

                    b.HasKey("InboxMessageId", "Name")
                        .HasName("pk_inbox_message_consumers");

                    b.ToTable("inbox_message_consumers", "oms");
                });

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("jsonb")
                        .HasColumnName("content");

                    b.Property<string>("Error")
                        .HasColumnType("text")
                        .HasColumnName("error");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("occurred_on_utc");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_outbox_messages");

                    b.ToTable("outbox_messages", "oms");
                });

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Outbox.OutboxMessageConsumer", b =>
                {
                    b.Property<Guid>("OutboxMessageId")
                        .HasColumnType("uuid")
                        .HasColumnName("outbox_message_id");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("name");

                    b.HasKey("OutboxMessageId", "Name")
                        .HasName("pk_outbox_message_consumers");

                    b.ToTable("outbox_message_consumers", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Orders.OrderHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CustomerComment")
                        .HasMaxLength(3000)
                        .HasColumnType("character varying(3000)")
                        .HasColumnName("customer_comment");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("customer_email");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<string>("CustomerMobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("customer_mobile");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("customer_name");

                    b.Property<decimal>("DeliveryCharge")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("delivery_charge");

                    b.Property<int?>("DeliveryMethod")
                        .HasColumnType("integer")
                        .HasColumnName("delivery_method");

                    b.Property<string>("ExternalOrderRef")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("external_order_ref");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("invoice_no");

                    b.Property<string>("InvoicedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("invoiced_by");

                    b.Property<DateTime?>("InvoicedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("invoiced_date");

                    b.Property<decimal>("OrderAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("order_amount");

                    b.Property<decimal>("OrderTax")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("order_tax");

                    b.Property<string>("OriginalSource")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("original_source");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer")
                        .HasColumnName("payment_method");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("integer")
                        .HasColumnName("payment_status");

                    b.Property<string>("PurchaseOrderNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("purchase_order_number");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uuid")
                        .HasColumnName("route_id");

                    b.Property<string>("SalesOrderNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("sales_order_number");

                    b.Property<string>("ShippingAddressCompany")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("shipping_address_company");

                    b.Property<string>("ShippingAddressCountry")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("shipping_address_country");

                    b.Property<string>("ShippingAddressCounty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("shipping_address_county");

                    b.Property<string>("ShippingAddressLine1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("shipping_address_line1");

                    b.Property<string>("ShippingAddressLine2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("shipping_address_line2");

                    b.Property<string>("ShippingAddressPostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("shipping_address_postal_code");

                    b.Property<string>("ShippingAddressTownCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("shipping_address_town_city");

                    b.Property<DateOnly>("ShippingDate")
                        .HasColumnType("date")
                        .HasColumnName("shipping_date");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tags");

                    b.HasKey("Id")
                        .HasName("pk_order_headers");

                    b.ToTable("order_headers", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Orders.OrderLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("FOC")
                        .HasColumnType("boolean")
                        .HasColumnName("foc");

                    b.Property<decimal>("LineTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("line_total");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("product_name");

                    b.Property<string>("ProductSku")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("product_sku");

                    b.Property<decimal>("Qty")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("qty");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("sub_total");

                    b.Property<decimal>("Tax")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("tax");

                    b.Property<bool>("Taxable")
                        .HasColumnType("boolean")
                        .HasColumnName("taxable");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("pk_order_lines");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_lines_order_id");

                    b.ToTable("order_lines", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.PurchaseOrders.PaymentMethod", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Name")
                        .HasName("pk_payment_method");

                    b.ToTable("payment_method", "oms");

                    b.HasData(
                        new
                        {
                            Name = "Bank Transfer"
                        },
                        new
                        {
                            Name = "COD"
                        },
                        new
                        {
                            Name = "CreditCard"
                        },
                        new
                        {
                            Name = "Invoice"
                        });
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.PurchaseOrders.PurchaseOrderHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("DeliveryCharge")
                        .HasColumnType("numeric")
                        .HasColumnName("delivery_charge");

                    b.Property<int?>("DeliveryMethod")
                        .HasColumnType("integer")
                        .HasColumnName("delivery_method");

                    b.Property<DateOnly>("ExpectedShippingDate")
                        .HasColumnType("date")
                        .HasColumnName("expected_shipping_date");

                    b.Property<string>("PaidBy")
                        .HasColumnType("text")
                        .HasColumnName("paid_by");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("paid_date");

                    b.Property<string>("PaymentMethodName")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasColumnName("payment_method_name");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("integer")
                        .HasColumnName("payment_status");

                    b.Property<DateOnly>("PurchaseDate")
                        .HasColumnType("date")
                        .HasColumnName("purchase_date");

                    b.Property<decimal>("PurchaseOrderAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("purchase_order_amount");

                    b.Property<string>("PurchaseOrderNo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("purchase_order_no");

                    b.Property<string>("PurchaseOrderNotes")
                        .HasColumnType("text")
                        .HasColumnName("purchase_order_notes");

                    b.Property<decimal>("PurchaseOrderTax")
                        .HasColumnType("numeric")
                        .HasColumnName("purchase_order_tax");

                    b.Property<DateOnly>("RequiredDate")
                        .HasColumnType("date")
                        .HasColumnName("required_date");

                    b.Property<string>("SalesOrderRef")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sales_order_ref");

                    b.Property<string>("ShippingAddressCompany")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("shipping_address_company");

                    b.Property<string>("ShippingAddressCountry")
                        .HasColumnType("text")
                        .HasColumnName("shipping_address_country");

                    b.Property<string>("ShippingAddressCounty")
                        .HasColumnType("text")
                        .HasColumnName("shipping_address_county");

                    b.Property<string>("ShippingAddressLine1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("shipping_address_line1");

                    b.Property<string>("ShippingAddressLine2")
                        .HasColumnType("text")
                        .HasColumnName("shipping_address_line2");

                    b.Property<string>("ShippingAddressPostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("shipping_address_postal_code");

                    b.Property<string>("ShippingAddressTownCity")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("shipping_address_town_city");

                    b.Property<string>("SupplierContact")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("supplier_contact");

                    b.Property<string>("SupplierEmail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("supplier_email");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uuid")
                        .HasColumnName("supplier_id");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("supplier_name");

                    b.Property<string>("SupplierPhone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("supplier_phone");

                    b.Property<string>("SupplierReference")
                        .HasColumnType("text")
                        .HasColumnName("supplier_reference");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tags");

                    b.HasKey("Id")
                        .HasName("pk_purchase_order_headers");

                    b.HasIndex("PaymentMethodName")
                        .HasDatabaseName("ix_purchase_order_headers_payment_method_name");

                    b.ToTable("purchase_order_headers", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.PurchaseOrders.PurchaseOrderLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("FOC")
                        .HasColumnType("boolean")
                        .HasColumnName("foc");

                    b.Property<decimal>("LineTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("line_total");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_name");

                    b.Property<string>("ProductSku")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_sku");

                    b.Property<Guid>("PurchaseOrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("purchase_order_id");

                    b.Property<int>("Qty")
                        .HasColumnType("integer")
                        .HasColumnName("qty");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("sub_total");

                    b.Property<decimal>("Tax")
                        .HasColumnType("numeric")
                        .HasColumnName("tax");

                    b.Property<bool>("Taxable")
                        .HasColumnType("boolean")
                        .HasColumnName("taxable");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("pk_purchase_order_lines");

                    b.ToTable("purchase_order_lines", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Orders.OrderLine", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.Orders.OrderHeader", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_lines_order_headers_order_id");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.PurchaseOrders.PurchaseOrderHeader", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.PurchaseOrders.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchase_order_headers_payment_method_payment_method_name");

                    b.Navigation("PaymentMethod");
                });
#pragma warning restore 612, 618
        }
    }
}
