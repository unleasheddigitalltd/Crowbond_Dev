// <auto-generated />
using System;
using Crowbond.Modules.OMS.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Crowbond.Modules.OMS.Infrastructure.Database.Migrations
{
    [DbContext(typeof(OmsDbContext))]
    [Migration("20240924100747_Add_BrandName_Columns")]
    partial class Add_BrandName_Columns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("oms")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Inbox.InboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("jsonb")
                        .HasColumnName("content");

                    b.Property<string>("Error")
                        .HasColumnType("text")
                        .HasColumnName("error");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("occurred_on_utc");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_inbox_messages");

                    b.ToTable("inbox_messages", "oms");
                });

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Inbox.InboxMessageConsumer", b =>
                {
                    b.Property<Guid>("InboxMessageId")
                        .HasColumnType("uuid")
                        .HasColumnName("inbox_message_id");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("name");

                    b.HasKey("InboxMessageId", "Name")
                        .HasName("pk_inbox_message_consumers");

                    b.ToTable("inbox_message_consumers", "oms");
                });

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("jsonb")
                        .HasColumnName("content");

                    b.Property<string>("Error")
                        .HasColumnType("text")
                        .HasColumnName("error");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("occurred_on_utc");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_outbox_messages");

                    b.ToTable("outbox_messages", "oms");
                });

            modelBuilder.Entity("Crowbond.Common.Infrastructure.Outbox.OutboxMessageConsumer", b =>
                {
                    b.Property<Guid>("OutboxMessageId")
                        .HasColumnType("uuid")
                        .HasColumnName("outbox_message_id");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("name");

                    b.HasKey("OutboxMessageId", "Name")
                        .HasName("pk_outbox_message_consumers");

                    b.ToTable("outbox_message_consumers", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Deliveries.Delivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comments")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("comments");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_time");

                    b.Property<Guid>("RouteTripLogDetailId")
                        .HasColumnType("uuid")
                        .HasColumnName("route_trip_log_detail_id");

                    b.HasKey("Id")
                        .HasName("pk_deliveries");

                    b.HasIndex("RouteTripLogDetailId")
                        .HasDatabaseName("ix_deliveries_route_trip_log_detail_id");

                    b.ToTable("deliveries", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.DeliveryImages.DeliveryImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("DeliveryId")
                        .HasColumnType("uuid")
                        .HasColumnName("delivery_id");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("image_id");

                    b.HasKey("Id")
                        .HasName("pk_delivery_images");

                    b.HasIndex("DeliveryId")
                        .HasDatabaseName("ix_delivery_images_delivery_id");

                    b.ToTable("delivery_images", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Drivers.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("mobile");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("username");

                    b.Property<string>("VehicleRegn")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("vehicle_regn");

                    b.HasKey("Id")
                        .HasName("pk_drivers");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_drivers_email");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("ix_drivers_username");

                    b.ToTable("drivers", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Orders.OrderHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on_utc");

                    b.Property<string>("CustomerAccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("customer_account_number");

                    b.Property<string>("CustomerBusinessName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("customer_business_name");

                    b.Property<string>("CustomerComment")
                        .HasMaxLength(3000)
                        .HasColumnType("character varying(3000)")
                        .HasColumnName("customer_comment");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<string>("DeliveryAddressLine1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("delivery_address_line1");

                    b.Property<string>("DeliveryAddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("delivery_address_line2");

                    b.Property<decimal>("DeliveryCharge")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("delivery_charge");

                    b.Property<string>("DeliveryCountry")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("delivery_country");

                    b.Property<string>("DeliveryCounty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("delivery_county");

                    b.Property<string>("DeliveryEmail")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("delivery_email");

                    b.Property<string>("DeliveryFullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("delivery_full_name");

                    b.Property<string>("DeliveryLocationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("delivery_location_name");

                    b.Property<int>("DeliveryMethod")
                        .HasColumnType("integer")
                        .HasColumnName("delivery_method");

                    b.Property<string>("DeliveryMobile")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("delivery_mobile");

                    b.Property<string>("DeliveryNotes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("delivery_notes");

                    b.Property<string>("DeliveryPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("delivery_phone");

                    b.Property<string>("DeliveryPostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("delivery_postal_code");

                    b.Property<string>("DeliveryTownCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("delivery_town_city");

                    b.Property<string>("ExternalOrderRef")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("external_order_ref");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on_utc");

                    b.Property<decimal>("OrderAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("order_amount");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("order_no");

                    b.Property<decimal>("OrderTax")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("order_tax");

                    b.Property<string>("OriginalSource")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("original_source");

                    b.Property<DateOnly?>("PaymentDueDate")
                        .HasColumnType("date")
                        .HasColumnName("payment_due_date");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer")
                        .HasColumnName("payment_method");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("integer")
                        .HasColumnName("payment_status");

                    b.Property<int>("PaymentTerm")
                        .HasColumnType("integer")
                        .HasColumnName("payment_term");

                    b.Property<string>("PurchaseOrderNo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("purchase_order_no");

                    b.Property<string>("RouteName")
                        .HasColumnType("text")
                        .HasColumnName("route_name");

                    b.Property<Guid?>("RouteTripId")
                        .HasColumnType("uuid")
                        .HasColumnName("route_trip_id");

                    b.Property<DateOnly>("ShippingDate")
                        .HasColumnType("date")
                        .HasColumnName("shipping_date");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Tags")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tags");

                    b.HasKey("Id")
                        .HasName("pk_order_headers");

                    b.HasIndex("RouteTripId")
                        .HasDatabaseName("ix_order_headers_route_trip_id");

                    b.ToTable("order_headers", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Orders.OrderLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("brand_name");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("category_name");

                    b.Property<decimal>("LineTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("line_total");

                    b.Property<Guid>("OrderHeaderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_header_id");

                    b.Property<string>("ProductGroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("product_group_name");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("product_name");

                    b.Property<string>("ProductSku")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("product_sku");

                    b.Property<decimal>("Qty")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("qty");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("sub_total");

                    b.Property<decimal>("Tax")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("tax");

                    b.Property<int>("TaxRateType")
                        .HasColumnType("integer")
                        .HasColumnName("tax_rate_type");

                    b.Property<string>("UnitOfMeasureName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("unit_of_measure_name");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("pk_order_lines");

                    b.HasIndex("OrderHeaderId")
                        .HasDatabaseName("ix_order_lines_order_header_id");

                    b.ToTable("order_lines", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Orders.OrderStatusHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("changed_at");

                    b.Property<Guid>("ChangedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("changed_by");

                    b.Property<Guid>("OrderHeaderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_header_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_order_status_histories");

                    b.HasIndex("OrderHeaderId")
                        .HasDatabaseName("ix_order_status_histories_order_header_id");

                    b.ToTable("order_status_histories", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.PurchaseOrders.PurchaseOrderHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contact_email");

                    b.Property<string>("ContactFullName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("contact_full_name");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("contact_phone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on_utc");

                    b.Property<decimal>("DeliveryCharge")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("delivery_charge");

                    b.Property<int?>("DeliveryMethod")
                        .HasColumnType("integer")
                        .HasColumnName("delivery_method");

                    b.Property<DateOnly?>("ExpectedShippingDate")
                        .HasColumnType("date")
                        .HasColumnName("expected_shipping_date");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on_utc");

                    b.Property<string>("PaidBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("paid_by");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("paid_date");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer")
                        .HasColumnName("payment_method");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("integer")
                        .HasColumnName("payment_status");

                    b.Property<DateOnly?>("PurchaseDate")
                        .HasColumnType("date")
                        .HasColumnName("purchase_date");

                    b.Property<decimal>("PurchaseOrderAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("purchase_order_amount");

                    b.Property<string>("PurchaseOrderNo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("purchase_order_no");

                    b.Property<string>("PurchaseOrderNotes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("purchase_order_notes");

                    b.Property<decimal>("PurchaseOrderTax")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("purchase_order_tax");

                    b.Property<DateOnly>("RequiredDate")
                        .HasColumnType("date")
                        .HasColumnName("required_date");

                    b.Property<string>("SalesOrderRef")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("sales_order_ref");

                    b.Property<string>("ShippingAddressLine1")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("shipping_address_line1");

                    b.Property<string>("ShippingAddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("shipping_address_line2");

                    b.Property<string>("ShippingCountry")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("shipping_country");

                    b.Property<string>("ShippingCounty")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("shipping_county");

                    b.Property<string>("ShippingLocationName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("shipping_location_name");

                    b.Property<string>("ShippingPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("shipping_postal_code");

                    b.Property<string>("ShippingTownCity")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("shipping_town_city");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("SupplierAccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("supplier_account_number");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uuid")
                        .HasColumnName("supplier_id");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("supplier_name");

                    b.Property<string>("SupplierReference")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("supplier_reference");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tags");

                    b.HasKey("Id")
                        .HasName("pk_purchase_order_headers");

                    b.ToTable("purchase_order_headers", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.PurchaseOrders.PurchaseOrderLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("brand_name");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("category_name");

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<decimal>("LineTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("line_total");

                    b.Property<string>("ProductGroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("product_group_name");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("product_name");

                    b.Property<string>("ProductSku")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("product_sku");

                    b.Property<Guid>("PurchaseOrderHeaderId")
                        .HasColumnType("uuid")
                        .HasColumnName("purchase_order_header_id");

                    b.Property<decimal>("Qty")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("qty");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("sub_total");

                    b.Property<decimal>("Tax")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("tax");

                    b.Property<int>("TaxRateType")
                        .HasColumnType("integer")
                        .HasColumnName("tax_rate_type");

                    b.Property<string>("UnitOfMeasureName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("unit_of_measure_name");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("pk_purchase_order_lines");

                    b.HasIndex("PurchaseOrderHeaderId")
                        .HasDatabaseName("ix_purchase_order_lines_purchase_order_header_id");

                    b.ToTable("purchase_order_lines", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.PurchaseOrders.PurchaseOrderStatusHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("changed_at");

                    b.Property<Guid>("ChangedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("changed_by");

                    b.Property<Guid>("PurchaseOrderHeaderId")
                        .HasColumnType("uuid")
                        .HasColumnName("purchase_order_header_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_purchase_order_status_histories");

                    b.HasIndex("PurchaseOrderHeaderId")
                        .HasDatabaseName("ix_purchase_order_status_histories_purchase_order_header_id");

                    b.ToTable("purchase_order_status_histories", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.RouteTripLogDatails.RouteTripLogDatail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_time");

                    b.Property<Guid>("OrderHeaderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_header_id");

                    b.Property<Guid>("RouteTripLogId")
                        .HasColumnType("uuid")
                        .HasColumnName("route_trip_log_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_route_trip_log_datails");

                    b.HasIndex("OrderHeaderId")
                        .IsUnique()
                        .HasDatabaseName("ix_route_trip_log_datails_order_header_id");

                    b.HasIndex("RouteTripLogId")
                        .HasDatabaseName("ix_route_trip_log_datails_route_trip_log_id");

                    b.ToTable("route_trip_log_datails", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.RouteTripLogs.RouteTripLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uuid")
                        .HasColumnName("driver_id");

                    b.Property<DateTime?>("LoggedOffTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("logged_off_time");

                    b.Property<DateTime>("LoggedOnTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("logged_on_time");

                    b.Property<Guid>("RouteTripId")
                        .HasColumnType("uuid")
                        .HasColumnName("route_trip_id");

                    b.Property<decimal?>("Temperature")
                        .HasPrecision(2, 2)
                        .HasColumnType("numeric(2,2)")
                        .HasColumnName("temperature");

                    b.Property<string>("VehicleRegn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("vehicle_regn");

                    b.HasKey("Id")
                        .HasName("pk_route_trip_logs");

                    b.HasIndex("DriverId")
                        .HasDatabaseName("ix_route_trip_logs_driver_id");

                    b.HasIndex("RouteTripId")
                        .HasDatabaseName("ix_route_trip_logs_route_trip_id");

                    b.ToTable("route_trip_logs", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.RouteTrips.RouteTrip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comments")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("comments");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uuid")
                        .HasColumnName("route_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_route_trips");

                    b.HasIndex("RouteId")
                        .HasDatabaseName("ix_route_trips_route_id");

                    b.ToTable("route_trips", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.RouteTrips.RouteTripStatusHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("changed_at");

                    b.Property<Guid>("ChangedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("changed_by");

                    b.Property<Guid>("RouteTripId")
                        .HasColumnType("uuid")
                        .HasColumnName("route_trip_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_route_trip_status_histories");

                    b.HasIndex("RouteTripId")
                        .HasDatabaseName("ix_route_trip_status_histories_route_trip_id");

                    b.ToTable("route_trip_status_histories", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Routes.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<TimeOnly>("CutOffTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("cut_off_time");

                    b.Property<string>("DaysOfWeek")
                        .IsRequired()
                        .HasColumnType("CHAR(7)")
                        .HasColumnName("days_of_week");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("Position")
                        .HasColumnType("integer")
                        .HasColumnName("position");

                    b.HasKey("Id")
                        .HasName("pk_routes");

                    b.ToTable("routes", "oms");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Sequences.Sequence", b =>
                {
                    b.Property<int>("Context")
                        .HasColumnType("integer")
                        .HasColumnName("context");

                    b.Property<int>("LastNumber")
                        .HasColumnType("integer")
                        .HasColumnName("last_number");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("prefix");

                    b.HasKey("Context")
                        .HasName("pk_sequences");

                    b.ToTable("sequences", "oms");

                    b.HasData(
                        new
                        {
                            Context = 0,
                            LastNumber = 10001,
                            Prefix = "INV"
                        },
                        new
                        {
                            Context = 2,
                            LastNumber = 10001,
                            Prefix = "POR"
                        },
                        new
                        {
                            Context = 1,
                            LastNumber = 10001,
                            Prefix = "SOR"
                        });
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Settings.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_on_utc");

                    b.Property<decimal>("DeliveryCharge")
                        .HasColumnType("numeric")
                        .HasColumnName("delivery_charge");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.HasKey("Id")
                        .HasName("pk_settings");

                    b.ToTable("settings", "oms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("037b725f-2110-40f8-a1b3-06ca5722cb83"),
                            DeliveryCharge = 10m,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Deliveries.Delivery", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.RouteTripLogDatails.RouteTripLogDatail", null)
                        .WithMany()
                        .HasForeignKey("RouteTripLogDetailId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_deliveries_route_trip_log_datails_route_trip_log_detail_id");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.DeliveryImages.DeliveryImage", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.Deliveries.Delivery", null)
                        .WithMany()
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_delivery_images_deliveries_delivery_id");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Orders.OrderHeader", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.RouteTrips.RouteTrip", null)
                        .WithMany()
                        .HasForeignKey("RouteTripId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fk_order_headers_route_trips_route_trip_id");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Orders.OrderLine", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.Orders.OrderHeader", null)
                        .WithMany("Lines")
                        .HasForeignKey("OrderHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_lines_order_headers_order_header_id");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Orders.OrderStatusHistory", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.Orders.OrderHeader", null)
                        .WithMany()
                        .HasForeignKey("OrderHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_status_histories_order_headers_order_header_id");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.PurchaseOrders.PurchaseOrderLine", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.PurchaseOrders.PurchaseOrderHeader", null)
                        .WithMany("Lines")
                        .HasForeignKey("PurchaseOrderHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchase_order_lines_purchase_order_headers_purchase_order_");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.PurchaseOrders.PurchaseOrderStatusHistory", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.PurchaseOrders.PurchaseOrderHeader", null)
                        .WithMany("StatusHistory")
                        .HasForeignKey("PurchaseOrderHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchase_order_status_histories_purchase_order_headers_purc");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.RouteTripLogDatails.RouteTripLogDatail", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.Orders.OrderHeader", null)
                        .WithMany()
                        .HasForeignKey("OrderHeaderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_route_trip_log_datails_order_headers_order_header_id");

                    b.HasOne("Crowbond.Modules.OMS.Domain.RouteTripLogs.RouteTripLog", null)
                        .WithMany()
                        .HasForeignKey("RouteTripLogId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_route_trip_log_datails_route_trip_logs_route_trip_log_id");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.RouteTripLogs.RouteTripLog", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.Drivers.Driver", null)
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_route_trip_logs_drivers_driver_id");

                    b.HasOne("Crowbond.Modules.OMS.Domain.RouteTrips.RouteTrip", null)
                        .WithMany("Logs")
                        .HasForeignKey("RouteTripId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_route_trip_logs_route_trips_route_trip_id");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.RouteTrips.RouteTrip", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.Routes.Route", null)
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_route_trips_routes_route_id");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.RouteTrips.RouteTripStatusHistory", b =>
                {
                    b.HasOne("Crowbond.Modules.OMS.Domain.RouteTrips.RouteTrip", null)
                        .WithMany("StatusHistories")
                        .HasForeignKey("RouteTripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_route_trip_status_histories_route_trips_route_trip_id");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.Orders.OrderHeader", b =>
                {
                    b.Navigation("Lines");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.PurchaseOrders.PurchaseOrderHeader", b =>
                {
                    b.Navigation("Lines");

                    b.Navigation("StatusHistory");
                });

            modelBuilder.Entity("Crowbond.Modules.OMS.Domain.RouteTrips.RouteTrip", b =>
                {
                    b.Navigation("Logs");

                    b.Navigation("StatusHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
